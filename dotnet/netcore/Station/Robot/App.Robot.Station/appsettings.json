{
  "Sers": {
    /* 消息队列配置 */
    "Mq": {
      "Config": {
        /* 后台处理消息的线程个数（单位个，默认2） */
        "workThreadCount": 2,

        /* 请求超时时间（单位ms，默认60000） */
        "requestTimeoutMs": 60000,


        //HeartBeat
        /* 心跳测试超时时间（单位ms，默认2000） */
        "heartBeatTimeoutMs": 10000,
        /* 心跳测试失败重试次数（单位次，默认3） */
        "heartBeatRetryCount": 10,
        /* 心跳测试时间间隔（单位ms，默认1000） */
        "heartBeatIntervalMs": 2000

      },

      /* one mq is one channel.can be multiable */
      "ClientMqBuilder": [
        {
          /* (x.1) mq type */
          /* mq协议（同一个通讯协议可以兼容使用,相互通讯） */
          "protocol": "Socket.SersFile",
          /* the class of MqBuilder in assemblyFile  */
          "className": "Sers.Mq.Socket.Iocp.MqBuilder.ClientMqBuilder",


          /* (x.2) mq config */
          /* Mq 服务端 host地址。例如： "127.0.0.1"、"sersms.com" */
          "host": "127.0.0.1",
          /* Mq 服务端 监听端口号。例如： 10345 */
          "port": 10345,
          /* Mq连接秘钥，用以验证连接安全性。服务端和客户端必须一致 */
          "secretKey": "SersSocketMq"
        },
        {
          /* (x.1) mq type - Ipc.SharedMemory */
          /* mq协议（同一个通讯协议可以兼容使用,相互通讯） */
          "protocol": "Ipc.SharedMemory",
          /* 在此Assembly中查找MqBuilder */
          "assemblyFile": "Sers.Mq.Ipc.SharedMemory.dll",
          /* the class of MqBuilder in assemblyFile  */
          //"className": "Sers.Mq.Ipc.SharedMemory.MqBuilder.ClientMqBuilder",


          /* (x.2) mq config */
          /* Mq 共享内存名称。例如： "ipcTest" */
          "name": "ipcForRobot",

          /* Mq连接秘钥，用以验证连接安全性。服务端和客户端必须一致 */
          "secretKey": "SersSocketMq"
        }
      ]
    },


    "Logger": {
      /* print the log to console. default:false  */
      "PrintToConsole": true
    },


    /* LocalApiService 配置,可不指定 */
    "LocalApiService": {

      /* 后台服务的线程个数（单位个，默认0,代表不开启服务）(appsettings.json :: Sers.LocalApiService.workThreadCount) */
      "workThreadCount": 1,

      /* Sers内置api discovery */
      "SersApiDiscovery": {
        /* 服务发现配置（通过反射从此包中获取要注册的api，可多个,可不指定） */
        "DiscoveryConfig": [
          {
            /* ApiStation名称。可不指定。（优先级从高到低：  apiStationName_Force 、 在代码上的SsStationNameAttribute特性指定 、 apiStationName 、 appsettings.json指定） */
            "apiStationName": "_robot_",

            /* 在此Assembly中查找服务(如 App.StationDemo.Station.dll)(assembly、assemblyFile、assemblyName 指定任一即可) */
            "assemblyFile": "App.Robot.Station.dll"
          }
        ]
      }
    },


    /* ServiceStation配置,可不指定 */
    "ServiceStation": {

      /* serviceStation站点信息 */
      "serviceStationInfo": {
        "serviceStationName": "Robot"
      }
    }
  },


  "Robot": {

    /* 静态文件的路径，若不指定则默认为当前目录下的wwwroot文件夹 */
    "wwwroot": ""
  }

}
